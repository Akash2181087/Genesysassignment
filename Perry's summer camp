import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.apache.hc.core5.http.*;
import org.apache.hc.client5.http.classic.*;
import org.apache.hc.client5.http.entity.*;
import java.io.IOException;

public class MessageApiTest {
    private static final String BASE_URL = "http://localhost:3000"; // Adjust based on your API URL
    private static CloseableHttpClient httpClient;

    @BeforeAll
    public static void setUp() {
        httpClient = HttpClients.createDefault();
    }

    @Test
    public void testCreateMessage() throws IOException {
        String requestBody = "{ \"from\": { \"id\": \"uuid-of-sender\" }, \"to\": { \"id\": \"uuid-of-recipient\" }, \"message\": \"Test message content\", \"time\": \"2021-07-14T12:00:00Z\" }";
        HttpPost request = new HttpPost(BASE_URL + "/message");
        request.setHeader(HttpHeaders.CONTENT_TYPE, "application/json");
        request.setEntity(new StringEntity(requestBody, ContentType.APPLICATION_JSON));

        try (CloseableHttpResponse response = httpClient.execute(request)) {
            assertEquals(HttpStatus.SC_CREATED, response.getCode());
            // Optionally, parse JSON response body to get message ID and verify other properties
        }
    }

    @Test
    public void testRetrieveMessages() throws IOException {
        String fromUserId = "uuid-of-sender";
        String toUserId = "uuid-of-recipient";
        HttpGet request = new HttpGet(BASE_URL + "/message?from=" + fromUserId + "&to=" + toUserId);

        try (CloseableHttpResponse response = httpClient.execute(request)) {
            assertEquals(HttpStatus.SC_OK, response.getCode());
            // Optionally, parse JSON response body to verify retrieved messages
        }
    }

    @Test
    public void testUpdateMessage() throws IOException {
        String messageId = "uuid-of-message";
        String updatedMessage = "{ \"message\": \"Updated message content\" }";
        HttpPut request = new HttpPut(BASE_URL + "/message/" + messageId);
        request.setHeader(HttpHeaders.CONTENT_TYPE, "application/json");
        request.setEntity(new StringEntity(updatedMessage, ContentType.APPLICATION_JSON));

        try (CloseableHttpResponse response = httpClient.execute(request)) {
            assertEquals(HttpStatus.SC_OK, response.getCode());
            // Optionally, parse JSON response body to verify updated message content
        }
    }

    @Test
    public void testDeleteMessage() throws IOException {
        String messageId = "uuid-of-message";
        HttpDelete request = new HttpDelete(BASE_URL + "/message/" + messageId);

        try (CloseableHttpResponse response = httpClient.execute(request)) {
            assertEquals(HttpStatus.SC_NO_CONTENT, response.getCode());
        }

        // Verify message is deleted (e.g., make a GET request and expect 404)
    }
}
